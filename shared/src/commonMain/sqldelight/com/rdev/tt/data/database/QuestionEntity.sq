import kotlin.String;
import kotlin.collections.List;

CREATE TABLE IF NOT EXISTS QuestionEntity(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    question TEXT NOT NULL,
    choices TEXT AS List<String> NOT NULL,
    answerIdx INTEGER NOT NULL,
    explanation TEXT,
    image TEXT,
    categories TEXT AS List<String> NOT NULL
);

insertQuestion:
INSERT OR REPLACE INTO QuestionEntity(question, choices, answerIdx, explanation, image, categories)
VALUES (?, ?, ?, ?, ?, ?);

getLastInsertedId:
SELECT last_insert_rowid();

getQuestionsByIds:
SELECT * FROM QuestionEntity
WHERE id IN ?;

getQuestionIdsByCategory:
SELECT id FROM QuestionEntity
WHERE categories LIKE ('%' || ? || '%');

getWronglyAnsweredQuestions:
SELECT *
FROM QuestionEntity AS q JOIN HistoryEntity AS h
ON q.id = h.questionId
GROUP BY q.id
HAVING SUM(CASE WHEN h.isCorrect == 0 THEN 1 ELSE 0 END) > SUM(CASE WHEN h.isCorrect == 1 THEN 1 ELSE 0 END);

filterWronglyAnsweredQuestions:
SELECT q.id
FROM QuestionEntity AS q JOIN HistoryEntity AS h
ON q.id = h.questionId
WHERE q.id IN ?
GROUP BY q.id
HAVING SUM(CASE WHEN h.isCorrect == 0 THEN 1 ELSE 0 END) > SUM(CASE WHEN h.isCorrect == 1 THEN 1 ELSE 0 END);